// File lang/cpp/src/messages/MON.h
// Auto-generated by pyUBX generateCPP.py v0.1 on 2017-11-13T12:51:21.869630
// See https://github.com/mayeranalytics/pyUBX
// DO NOT MODIFY THIS FILE!

#ifndef __MON_H__
#define __MON_H__

#include <stdint.h>
#include "../UBX.h"

/* Message class MON.
 */
struct MON
{
    struct HW;
    struct VER;
};

/* ยง31.17.3.1 Hardware Status.
 */
struct MON::HW : public Message
{
    uint32_t pinSel;
    uint32_t pinBank;
    uint32_t pinDir;
    uint32_t pinVal;
    uint16_t noisePerMS;
    uint16_t agcCnt;
    uint8_t aStatus;
    uint8_t aPower;
    uint8_t flags;
    uint8_t reserved1;
    uint32_t usedMask;
    char VP[17];
    uint8_t jamInd;
    uint16_t reserved2;
    uint32_t pinIrq;
    uint32_t pullH;
    uint32_t pullL;

    static uint8_t classID;
    static uint8_t messageID;
};

uint8_t MON::HW::classID   = 0x0A;
uint8_t MON::HW::messageID = 0x09;

struct MON::VER : public Message
{
    char swVersion[30];
    char hwVersion[10];

    struct Repeated {
        char extension[30];
    };
    typedef _iterator<MON::VER::Repeated> iterator;
    static _iterator<Repeated> iter(char*data, size_t size) {
        return _iterator<Repeated>(data+sizeof(MON::VER), size-sizeof(MON::VER));
    }
    static _iterator<Repeated> iter(MON::VER& msg, size_t size) {
        return iter((char*)(&msg), size);
    }
    static size_t size(size_t n) { return sizeof(MON::VER) + n*sizeof(MON::VER::Repeated); }

    static uint8_t classID;
    static uint8_t messageID;
};

uint8_t MON::VER::classID   = 0x0A;
uint8_t MON::VER::messageID = 0x04;

#endif // ifndef __MON_H__
