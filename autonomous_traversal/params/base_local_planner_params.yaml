NavfnROS:
    allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
    default_tolerance: 0.5 # A tolerance on the goal point for the planner.

GlobalPlanner:
    allow_unknown: true
    default_tolerance: .5
    visualize_potential: true
    use_dijkstra: true

TrajectoryPlannerROS:
    max_vel_x: 1.5
    min_vel_x: 0.25  # Allowing velocities too low will will stop the 
                    # obstacle avoidance because low velocities won't 
                    # actually be high enough to move the robot
    max_vel_theta: 3.14
    min_vel_theta: -3.14
    min_in_place_vel_theta: 3.14

    acc_lim_theta: 10.0
    acc_lim_x: 10.0
    acc_lim_y: 0.0

    holonomic_robot: false

    # New Stuff
    escape_vel: -.5

    # Goal Tolerance Parameters
    yaw_goal_tolerance: 1.633123935319537e+16 # in rads
    xy_goal_tolerance: .5  # in meters
    latch_xy_goal_tolerance: false

    # Forward Simulation Parameters
    # these parameters change how the planner simulates trajectories at each update and therefore changes the optimal trajectory that is chosen
    # These should be adjusted based on your computer performance
    sim_time: 3.0   # setting time of each simulation that it must evaluate. Higher will create longer curves but too low can limit performance (<2)
    sim_granularity: 0.02 # the step size to take between points on a trajectory, or how frequent should the points on this trajectory should be examined
    angular_sim_granularity: 0.02
    vx_samples: 10  # how many samples of x velocity are taken for simulated trajectories
    vtheta_samples: 30 # how many samples of theta velocity are taken for simulated trajectories
    controller_frequency: 5.0  # how often the planning algorithm is performed (hz)

    # Trajectory scoring parameters
    meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
    occdist_scale:  0.01 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
    pdist_scale: 0.6  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
    gdist_scale: 0.8 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

    heading_lookahead: 0.1  #How far to look ahead in meters when scoring different in-place-rotation trajectories
    heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
    heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
    dwa: true #Whether to use the Dynamic Window Approach (DWA) or whether to use Trajectory Rollout
    simple_attractor: false
    publish_cost_grid_pc: true  

    # Oscillation Prevention Parameters
    oscillation_reset_dist: 1.0 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
    escape_reset_dist: 0.1
    escape_reset_theta: 0.1

DWAPlannerROS:
    # Robot configuration parameters  
    acc_lim_x: 10.0
    acc_lim_y: 0
    acc_lim_th: 10.0

    max_vel_x: 1.0
    min_vel_x: 0.0
    max_vel_y: 0
    min_vel_y: 0

    max_trans_vel: 1.0
    min_trans_vel: 0.1              # Never set to 0
    max_rot_vel: 3.15
    min_rot_vel: -3.15

    holonomic_robot: false

    # Goal Tolerance Parameters
    yaw_goal_tolerance: 1.633123935319537e+16
    xy_goal_tolerance: 1
    latch_xy_goal_tolerance: false


    # Forward Simulation Parameters
    sim_time: 2.0
    sim_granularity: 0.02
    vx_samples: 6
    vy_samples: 0
    vtheta_samples: 20

    # Trajectory scoring parameters
    path_distance_bias: 64.0        # 32.0  - The weighting for how much the controller should stay close to the path it was given
    goal_distance_bias: 24.0        # 24.0  - The weighting for how much the controller should attempt to reach its local goal, also controls speed
    occdist_scale: 0.5              # 0.01  - The weighting for how much the controller should attempt to avoid obstacles
    forward_point_distance: 0.325   # .325  - The distance from the center point of the robot to place an additional scoring point, in meters
    stop_time_buffer: 0.2           # 0.2   - The amount of time that the robot must stThe absolute value of the veolicty at which to start scaling the robot's footprint, in m/sop before a collision in order for a trajectory to be considered valid in seconds
    scaling_speed: 0.25             # 0.25  - The absolute value of the veolicty at which to start scaling the robot's footprint, in m/s
    max_scaling_factor: 0.2         # 0.2   - The maximum factor to scale the robot's footprint by

    # Oscillation Prevention Parameters
    oscillation_reset_dist: 0.25    #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)

    # Debugging
    publish_traj_pc : true
    publish_cost_grid_pc: true
    global_frame_id: odom

