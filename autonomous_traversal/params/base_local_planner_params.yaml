GlobalPlanner:
    allow_unknown: true
    default_tolerance: .5
    visualize_potential: false
    use_dijkstra: true

TrajectoryPlannerROS:
    max_vel_x: 0.5
    min_vel_x: 0.1  # Allowing velocities too low will will stop the 
                    # obstacle avoidance because low velocities won't 
                    # actually be high enough to move the robot
    max_vel_theta: .5
    min_vel_theta: -.5
    min_in_place_vel_theta: 0.5
    escape_vel: -.1

    acc_lim_theta: 1.0
    acc_lim_x: 1.0
    acc_lim_y: 0.0

    holonomic_robot: false

    # Goal Tolerance Parameters
    yaw_goal_tolerance: 1.633123935319537e+16
    xy_goal_tolerance: .5  
    latch_xy_goal_tolerance: false

    ## Forward Simulation Parameters
    # These parameters change how the planner simulates trajectories at each update and therefore changes the optimal trajectory that is chosen.These should be adjusted based on your computer performance
    sim_time: 1.5   # setting time of each simulation that it must evaluate. Higher will create longer curves but too low can limit performance (<2)
    sim_granularity: 0.02 # the step size to take between points on a trajectory, or how frequent should the points on this trajectory should be examined
    angular_sim_granularity: 0.02
    vx_samples: 6  # how many samples of x velocity are taken for simulated trajectories
    vtheta_samples: 20 # how many samples of theta velocity are taken for simulated trajectories
    controller_frequency: 5.0  # how often the planning algorithm is performed (hz)

    ## Trajectory scoring parameters
    # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
    meter_scoring: true 
    # The weighting for how much the controller should attempt to avoid obstacles. default 0.01
    occdist_scale:  0.15
    # The weighting for how much the controller should stay close to the path it was given . default 0.6
    pdist_scale: .8
    # The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8
    gdist_scale: 0.5

    # How far to look ahead in meters when scoring different in-place-rotation trajectories
    heading_lookahead: 0.1  
    # Whether to score based on the robot's heading to the path or its distance from the path. default false
    heading_scoring: false  
    # How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
    heading_scoring_timestep: 0.8   
    # Whether to use the Dynamic Window Approach (DWA) or whether to use Trajectory Rollout
    dwa: false 
    simple_attractor: false
    publish_cost_grid_pc: true  

    ## Oscillation Prevention Parameters
    # How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
    oscillation_reset_dist: 1.0 
    escape_reset_dist: 0.1
    escape_reset_theta: 0.1


EBandPlannerROS:
    # Goal Tolerance Parameters
    yaw_goal_tolerance: 1.633123935319537e+16
    xy_goal_tolerance: .5  

    max_vel_lin: 0.5
    max_vel_th: 0.3